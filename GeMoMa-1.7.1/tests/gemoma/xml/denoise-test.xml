<listResult>
<name><className>java.lang.String</className></name><comment><className>java.lang.String</className></comment><datatype><className>de.jstacs.DataType</className><name>LIST</name></datatype><export><className>java.lang.Boolean</className>false</export><list><className>[Lde.jstacs.results.ResultSet;</className><length>1</length><pos val="0"><className>de.jstacs.results.ResultSet</className><resultSet>
<resStrings><className>[Lde.jstacs.results.Result;</className><length>1</length><pos val="0"><className>de.jstacs.results.TextResult</className><TextResult>
<name><className>java.lang.String</className>denoised introns</name><comment><className>java.lang.String</className>Result</comment><datatype><className>de.jstacs.DataType</className><name>FILE</name></datatype><mime><className>java.lang.String</className>gff</mime><value><className>de.jstacs.parameters.FileParameter$FileRepresentation</className><fileRepresentation>
<filename><className>java.lang.String</className>tests/gemoma/intermediate/denoised_introns.gff</filename><compressed><className>java.lang.Boolean</className>false</compressed></fileRepresentation>
</value><producer><className>java.lang.String</className>DenoiseIntrons</producer><export><className>java.lang.Boolean</className>true</export><extype>null</extype><isTempFile><className>java.lang.Boolean</className>false</isTempFile></TextResult>
</pos></resStrings></resultSet>
</pos></list><toolParameters><className>de.jstacs.tools.ToolParameterSet</className><ToolParameterSet>
<toolName><className>java.lang.String</className>DenoiseIntrons</toolName><parameterSet>
<set>
<numberOfParameters><className>java.lang.Integer</className>5</numberOfParameters><parameter><className>de.jstacs.parameters.ParameterSetContainer</className><parameterSetContainer>
<name><className>java.lang.String</className>introns</name><comment><className>java.lang.String</className></comment><datatype><className>de.jstacs.DataType</className><name>PARAMETERSET</name></datatype><parameters><className>de.jstacs.parameters.ExpandableParameterSet</className><expandableParameterSet>
<superParameters>
<parameterSet>
<set>
<numberOfParameters><className>java.lang.Integer</className>1</numberOfParameters><parameter><className>de.jstacs.parameters.ParameterSetContainer</className><parameterSetContainer>
<name><className>java.lang.String</className>introns no. 1</name><comment><className>java.lang.String</className></comment><datatype><className>de.jstacs.DataType</className><name>PARAMETERSET</name></datatype><parameters><className>de.jstacs.parameters.SimpleParameterSet</className><parameterSet>
<set>
<numberOfParameters><className>java.lang.Integer</className>1</numberOfParameters><parameter><className>de.jstacs.parameters.FileParameter</className><fileParameter>
<name><className>java.lang.String</className>introns</name><comment><className>java.lang.String</className>Introns (GFF), which might be obtained from RNA-seq</comment><datatype><className>de.jstacs.DataType</className><name>FILE</name></datatype><mime><className>java.lang.String</className>gff,gff3</mime><checkMimeType><className>java.lang.Boolean</className>true</checkMimeType><required><className>java.lang.Boolean</className>true</required><isSet><className>java.lang.Boolean</className>true</isSet><errorMessage>null</errorMessage><value><className>de.jstacs.parameters.FileParameter$FileRepresentation</className><fileRepresentation>
<filename><className>java.lang.String</className>tests/gemoma/intermediate/introns.gff</filename><compressed><className>java.lang.Boolean</className>false</compressed></fileRepresentation>
</value><validator><className>de.jstacs.parameters.validation.FileExistsValidator</className><FileExistsValidator>
<errorMsg>null</errorMsg></FileExistsValidator>
</validator></fileParameter>
</parameter></set>
</parameterSet>
</parameters></parameterSetContainer>
</parameter></set>
</parameterSet>
</superParameters>
<template><className>de.jstacs.parameters.SimpleParameterSet</className><parameterSet>
<set>
<numberOfParameters><className>java.lang.Integer</className>1</numberOfParameters><parameter><className>de.jstacs.parameters.FileParameter</className><fileParameter>
<name><className>java.lang.String</className>introns</name><comment><className>java.lang.String</className>Introns (GFF), which might be obtained from RNA-seq</comment><datatype><className>de.jstacs.DataType</className><name>FILE</name></datatype><mime><className>java.lang.String</className>gff,gff3</mime><checkMimeType><className>java.lang.Boolean</className>true</checkMimeType><required><className>java.lang.Boolean</className>true</required><isSet><className>java.lang.Boolean</className>false</isSet><errorMessage>null</errorMessage><value>null</value><validator><className>de.jstacs.parameters.validation.FileExistsValidator</className><FileExistsValidator>
<errorMsg>null</errorMsg></FileExistsValidator>
</validator></fileParameter>
</parameter></set>
</parameterSet>
</template><nameTemplate><className>java.lang.String</className>introns</nameTemplate><commentTemplate><className>java.lang.String</className></commentTemplate><initCount><className>java.lang.Integer</className>1</initCount><minCount><className>java.lang.Integer</className>1</minCount><maxCount><className>java.lang.Integer</className>2147483647</maxCount></expandableParameterSet>
</parameters></parameterSetContainer>
</parameter><parameter><className>de.jstacs.parameters.ParameterSetContainer</className><parameterSetContainer>
<name><className>java.lang.String</className>coverage</name><comment><className>java.lang.String</className></comment><datatype><className>de.jstacs.DataType</className><name>PARAMETERSET</name></datatype><parameters><className>de.jstacs.parameters.ExpandableParameterSet</className><expandableParameterSet>
<superParameters>
<parameterSet>
<set>
<numberOfParameters><className>java.lang.Integer</className>1</numberOfParameters><parameter><className>de.jstacs.parameters.ParameterSetContainer</className><parameterSetContainer>
<name><className>java.lang.String</className>coverage no. 1</name><comment><className>java.lang.String</className></comment><datatype><className>de.jstacs.DataType</className><name>PARAMETERSET</name></datatype><parameters><className>de.jstacs.parameters.SimpleParameterSet</className><parameterSet>
<set>
<numberOfParameters><className>java.lang.Integer</className>1</numberOfParameters><parameter><className>de.jstacs.parameters.SelectionParameter</className><collectionParameter>
<name><className>java.lang.String</className>coverage</name><comment><className>java.lang.String</className>experimental coverage (RNA-seq)</comment><datatype><className>de.jstacs.DataType</className><name>PARAMETERSET</name></datatype><required><className>java.lang.Boolean</className>true</required><userSelected><className>java.lang.Boolean</className>true</userSelected><errorMessage>null</errorMessage><collection><className>de.jstacs.parameters.SimpleParameterSet</className><parameterSet>
<set>
<numberOfParameters><className>java.lang.Integer</className>2</numberOfParameters><parameter><className>de.jstacs.parameters.ParameterSetContainer</className><parameterSetContainer>
<name><className>java.lang.String</className>UNSTRANDED</name><comment>null</comment><datatype><className>de.jstacs.DataType</className><name>PARAMETERSET</name></datatype><parameters><className>de.jstacs.parameters.SimpleParameterSet</className><parameterSet>
<set>
<numberOfParameters><className>java.lang.Integer</className>1</numberOfParameters><parameter><className>de.jstacs.parameters.FileParameter</className><fileParameter>
<name><className>java.lang.String</className>coverage_unstranded</name><comment><className>java.lang.String</className>The coverage file contains the unstranded coverage of the genome per interval. Intervals with coverage 0 (zero) can be left out.</comment><datatype><className>de.jstacs.DataType</className><name>FILE</name></datatype><mime><className>java.lang.String</className>bedgraph</mime><checkMimeType><className>java.lang.Boolean</className>false</checkMimeType><required><className>java.lang.Boolean</className>true</required><isSet><className>java.lang.Boolean</className>true</isSet><errorMessage>null</errorMessage><value><className>de.jstacs.parameters.FileParameter$FileRepresentation</className><fileRepresentation>
<filename><className>java.lang.String</className>tests/gemoma/intermediate/coverage.bedgraph</filename><compressed><className>java.lang.Boolean</className>false</compressed></fileRepresentation>
</value><validator><className>de.jstacs.parameters.validation.FileExistsValidator</className><FileExistsValidator>
<errorMsg>null</errorMsg></FileExistsValidator>
</validator></fileParameter>
</parameter></set>
</parameterSet>
</parameters></parameterSetContainer>
</parameter><parameter><className>de.jstacs.parameters.ParameterSetContainer</className><parameterSetContainer>
<name><className>java.lang.String</className>STRANDED</name><comment>null</comment><datatype><className>de.jstacs.DataType</className><name>PARAMETERSET</name></datatype><parameters><className>de.jstacs.parameters.SimpleParameterSet</className><parameterSet>
<set>
<numberOfParameters><className>java.lang.Integer</className>2</numberOfParameters><parameter><className>de.jstacs.parameters.FileParameter</className><fileParameter>
<name><className>java.lang.String</className>coverage_forward</name><comment><className>java.lang.String</className>The coverage file contains the forward coverage of the genome per interval. Intervals with coverage 0 (zero) can be left out.</comment><datatype><className>de.jstacs.DataType</className><name>FILE</name></datatype><mime><className>java.lang.String</className>bedgraph</mime><checkMimeType><className>java.lang.Boolean</className>false</checkMimeType><required><className>java.lang.Boolean</className>true</required><isSet><className>java.lang.Boolean</className>false</isSet><errorMessage>null</errorMessage><value>null</value><validator><className>de.jstacs.parameters.validation.FileExistsValidator</className><FileExistsValidator>
<errorMsg>null</errorMsg></FileExistsValidator>
</validator></fileParameter>
</parameter><parameter><className>de.jstacs.parameters.FileParameter</className><fileParameter>
<name><className>java.lang.String</className>coverage_reverse</name><comment><className>java.lang.String</className>The coverage file contains the reverse coverage of the genome per interval. Intervals with coverage 0 (zero) can be left out.</comment><datatype><className>de.jstacs.DataType</className><name>FILE</name></datatype><mime><className>java.lang.String</className>bedgraph</mime><checkMimeType><className>java.lang.Boolean</className>false</checkMimeType><required><className>java.lang.Boolean</className>true</required><isSet><className>java.lang.Boolean</className>false</isSet><errorMessage>null</errorMessage><value>null</value><validator><className>de.jstacs.parameters.validation.FileExistsValidator</className><FileExistsValidator>
<errorMsg>null</errorMsg></FileExistsValidator>
</validator></fileParameter>
</parameter></set>
</parameterSet>
</parameters></parameterSetContainer>
</parameter></set>
</parameterSet>
</collection><selected><className>java.lang.Integer</className>0</selected><defaultSelected><className>java.lang.Integer</className>0</defaultSelected></collectionParameter>
</parameter></set>
</parameterSet>
</parameters></parameterSetContainer>
</parameter></set>
</parameterSet>
</superParameters>
<template><className>de.jstacs.parameters.SimpleParameterSet</className><parameterSet>
<set>
<numberOfParameters><className>java.lang.Integer</className>1</numberOfParameters><parameter><className>de.jstacs.parameters.SelectionParameter</className><collectionParameter>
<name><className>java.lang.String</className>coverage</name><comment><className>java.lang.String</className>experimental coverage (RNA-seq)</comment><datatype><className>de.jstacs.DataType</className><name>PARAMETERSET</name></datatype><required><className>java.lang.Boolean</className>true</required><userSelected><className>java.lang.Boolean</className>false</userSelected><errorMessage>null</errorMessage><collection><className>de.jstacs.parameters.SimpleParameterSet</className><parameterSet>
<set>
<numberOfParameters><className>java.lang.Integer</className>2</numberOfParameters><parameter><className>de.jstacs.parameters.ParameterSetContainer</className><parameterSetContainer>
<name><className>java.lang.String</className>UNSTRANDED</name><comment>null</comment><datatype><className>de.jstacs.DataType</className><name>PARAMETERSET</name></datatype><parameters><className>de.jstacs.parameters.SimpleParameterSet</className><parameterSet>
<set>
<numberOfParameters><className>java.lang.Integer</className>1</numberOfParameters><parameter><className>de.jstacs.parameters.FileParameter</className><fileParameter>
<name><className>java.lang.String</className>coverage_unstranded</name><comment><className>java.lang.String</className>The coverage file contains the unstranded coverage of the genome per interval. Intervals with coverage 0 (zero) can be left out.</comment><datatype><className>de.jstacs.DataType</className><name>FILE</name></datatype><mime><className>java.lang.String</className>bedgraph</mime><checkMimeType><className>java.lang.Boolean</className>false</checkMimeType><required><className>java.lang.Boolean</className>true</required><isSet><className>java.lang.Boolean</className>false</isSet><errorMessage>null</errorMessage><value>null</value><validator><className>de.jstacs.parameters.validation.FileExistsValidator</className><FileExistsValidator>
<errorMsg>null</errorMsg></FileExistsValidator>
</validator></fileParameter>
</parameter></set>
</parameterSet>
</parameters></parameterSetContainer>
</parameter><parameter><className>de.jstacs.parameters.ParameterSetContainer</className><parameterSetContainer>
<name><className>java.lang.String</className>STRANDED</name><comment>null</comment><datatype><className>de.jstacs.DataType</className><name>PARAMETERSET</name></datatype><parameters><className>de.jstacs.parameters.SimpleParameterSet</className><parameterSet>
<set>
<numberOfParameters><className>java.lang.Integer</className>2</numberOfParameters><parameter><className>de.jstacs.parameters.FileParameter</className><fileParameter>
<name><className>java.lang.String</className>coverage_forward</name><comment><className>java.lang.String</className>The coverage file contains the forward coverage of the genome per interval. Intervals with coverage 0 (zero) can be left out.</comment><datatype><className>de.jstacs.DataType</className><name>FILE</name></datatype><mime><className>java.lang.String</className>bedgraph</mime><checkMimeType><className>java.lang.Boolean</className>false</checkMimeType><required><className>java.lang.Boolean</className>true</required><isSet><className>java.lang.Boolean</className>false</isSet><errorMessage>null</errorMessage><value>null</value><validator><className>de.jstacs.parameters.validation.FileExistsValidator</className><FileExistsValidator>
<errorMsg>null</errorMsg></FileExistsValidator>
</validator></fileParameter>
</parameter><parameter><className>de.jstacs.parameters.FileParameter</className><fileParameter>
<name><className>java.lang.String</className>coverage_reverse</name><comment><className>java.lang.String</className>The coverage file contains the reverse coverage of the genome per interval. Intervals with coverage 0 (zero) can be left out.</comment><datatype><className>de.jstacs.DataType</className><name>FILE</name></datatype><mime><className>java.lang.String</className>bedgraph</mime><checkMimeType><className>java.lang.Boolean</className>false</checkMimeType><required><className>java.lang.Boolean</className>true</required><isSet><className>java.lang.Boolean</className>false</isSet><errorMessage>null</errorMessage><value>null</value><validator><className>de.jstacs.parameters.validation.FileExistsValidator</className><FileExistsValidator>
<errorMsg>null</errorMsg></FileExistsValidator>
</validator></fileParameter>
</parameter></set>
</parameterSet>
</parameters></parameterSetContainer>
</parameter></set>
</parameterSet>
</collection><selected><className>java.lang.Integer</className>0</selected><defaultSelected><className>java.lang.Integer</className>0</defaultSelected></collectionParameter>
</parameter></set>
</parameterSet>
</template><nameTemplate><className>java.lang.String</className>coverage</nameTemplate><commentTemplate><className>java.lang.String</className></commentTemplate><initCount><className>java.lang.Integer</className>1</initCount><minCount><className>java.lang.Integer</className>1</minCount><maxCount><className>java.lang.Integer</className>2147483647</maxCount></expandableParameterSet>
</parameters></parameterSetContainer>
</parameter><parameter><className>de.jstacs.parameters.SimpleParameter</className><simpleParameter>
<name><className>java.lang.String</className>maximum intron length</name><comment><className>java.lang.String</className>The maximum length of an intron</comment><datatype><className>de.jstacs.DataType</className><name>INT</name></datatype><required><className>java.lang.Boolean</className>true</required><isSet><className>java.lang.Boolean</className>false</isSet><errorMessage><className>java.lang.String</className></errorMessage><validator>null</validator><defaultValue><className>java.lang.Integer</className>15000</defaultValue><value><className>java.lang.Integer</className>15000</value></simpleParameter>
</parameter><parameter><className>de.jstacs.parameters.SimpleParameter</className><simpleParameter>
<name><className>java.lang.String</className>minimum expression</name><comment><className>java.lang.String</className>The threshold for removing introns</comment><datatype><className>de.jstacs.DataType</className><name>DOUBLE</name></datatype><required><className>java.lang.Boolean</className>true</required><isSet><className>java.lang.Boolean</className>false</isSet><errorMessage>null</errorMessage><validator><className>de.jstacs.parameters.validation.NumberValidator</className><NumberValidator>
<className><className>java.lang.String</className>java.lang.Double</className><lowerBound><className>java.lang.String</className>0.0</lowerBound><upperBound><className>java.lang.String</className>1.0</upperBound></NumberValidator>
</validator><defaultValue><className>java.lang.Double</className>0.01</defaultValue><value><className>java.lang.Double</className>0.01</value></simpleParameter>
</parameter><parameter><className>de.jstacs.parameters.SimpleParameter</className><simpleParameter>
<name><className>java.lang.String</className>context</name><comment><className>java.lang.String</className>The context upstream a donor and donwstream an acceptor site that is used to determine the expression of the region</comment><datatype><className>de.jstacs.DataType</className><name>INT</name></datatype><required><className>java.lang.Boolean</className>true</required><isSet><className>java.lang.Boolean</className>false</isSet><errorMessage>null</errorMessage><validator><className>de.jstacs.parameters.validation.NumberValidator</className><NumberValidator>
<className><className>java.lang.String</className>java.lang.Integer</className><lowerBound><className>java.lang.String</className>0</lowerBound><upperBound><className>java.lang.String</className>100</upperBound></NumberValidator>
</validator><defaultValue><className>java.lang.Integer</className>10</defaultValue><value><className>java.lang.Integer</className>10</value></simpleParameter>
</parameter></set>
</parameterSet>
</ToolParameterSet>
</toolParameters><toolName><className>java.lang.String</className>DenoiseIntrons</toolName><date><className>java.lang.Long</className>1599481972967</date></listResult>
