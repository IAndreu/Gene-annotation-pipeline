<listResult>
<name><className>java.lang.String</className></name><comment><className>java.lang.String</className></comment><datatype><className>de.jstacs.DataType</className><name>LIST</name></datatype><export><className>java.lang.Boolean</className>false</export><list><className>[Lde.jstacs.results.ResultSet;</className><length>1</length><pos val="0"><className>de.jstacs.results.ResultSet</className><resultSet>
<resStrings><className>[Lde.jstacs.results.Result;</className><length>2</length><pos val="0"><className>de.jstacs.results.TextResult</className><TextResult>
<name><className>java.lang.String</className>cds-parts</name><comment><className>java.lang.String</className>Result</comment><datatype><className>de.jstacs.DataType</className><name>FILE</name></datatype><mime><className>java.lang.String</className>fasta</mime><value><className>de.jstacs.parameters.FileParameter$FileRepresentation</className><fileRepresentation>
<filename><className>java.lang.String</className>tests/gemoma/intermediate/cds-parts.fasta</filename><compressed><className>java.lang.Boolean</className>false</compressed></fileRepresentation>
</value><producer><className>java.lang.String</className>Extractor</producer><export><className>java.lang.Boolean</className>true</export><extype>null</extype><isTempFile><className>java.lang.Boolean</className>false</isTempFile></TextResult>
</pos><pos val="1"><className>de.jstacs.results.TextResult</className><TextResult>
<name><className>java.lang.String</className>assignment</name><comment><className>java.lang.String</className>Result</comment><datatype><className>de.jstacs.DataType</className><name>FILE</name></datatype><mime><className>java.lang.String</className>tabular</mime><value><className>de.jstacs.parameters.FileParameter$FileRepresentation</className><fileRepresentation>
<filename><className>java.lang.String</className>tests/gemoma/intermediate/assignment.tabular</filename><compressed><className>java.lang.Boolean</className>false</compressed></fileRepresentation>
</value><producer><className>java.lang.String</className>Extractor</producer><export><className>java.lang.Boolean</className>true</export><extype>null</extype><isTempFile><className>java.lang.Boolean</className>false</isTempFile></TextResult>
</pos></resStrings></resultSet>
</pos></list><toolParameters><className>de.jstacs.tools.ToolParameterSet</className><ToolParameterSet>
<toolName><className>java.lang.String</className>Extractor</toolName><parameterSet>
<set>
<numberOfParameters><className>java.lang.Integer</className>15</numberOfParameters><parameter><className>de.jstacs.parameters.FileParameter</className><fileParameter>
<name><className>java.lang.String</className>annotation</name><comment><className>java.lang.String</className>Reference annotation file (GFF or GTF), which contains gene models annotated in the reference genome</comment><datatype><className>de.jstacs.DataType</className><name>FILE</name></datatype><mime><className>java.lang.String</className>gff,gff3,gtf</mime><checkMimeType><className>java.lang.Boolean</className>true</checkMimeType><required><className>java.lang.Boolean</className>true</required><isSet><className>java.lang.Boolean</className>true</isSet><errorMessage>null</errorMessage><value><className>de.jstacs.parameters.FileParameter$FileRepresentation</className><fileRepresentation>
<filename><className>java.lang.String</className>tests/gemoma/ref-annotation.gff</filename><compressed><className>java.lang.Boolean</className>false</compressed></fileRepresentation>
</value><validator><className>de.jstacs.parameters.validation.FileExistsValidator</className><FileExistsValidator>
<errorMsg>null</errorMsg></FileExistsValidator>
</validator></fileParameter>
</parameter><parameter><className>de.jstacs.parameters.FileParameter</className><fileParameter>
<name><className>java.lang.String</className>genome</name><comment><className>java.lang.String</className>Reference genome file (FASTA)</comment><datatype><className>de.jstacs.DataType</className><name>FILE</name></datatype><mime><className>java.lang.String</className>fasta,fa,fas,fna,fasta.gz,fa.gz,fas.gz,fna.gz</mime><checkMimeType><className>java.lang.Boolean</className>true</checkMimeType><required><className>java.lang.Boolean</className>true</required><isSet><className>java.lang.Boolean</className>true</isSet><errorMessage>null</errorMessage><value><className>de.jstacs.parameters.FileParameter$FileRepresentation</className><fileRepresentation>
<filename><className>java.lang.String</className>tests/gemoma/ref-fragment.fasta</filename><compressed><className>java.lang.Boolean</className>false</compressed></fileRepresentation>
</value><validator><className>de.jstacs.parameters.validation.FileExistsValidator</className><FileExistsValidator>
<errorMsg>null</errorMsg></FileExistsValidator>
</validator></fileParameter>
</parameter><parameter><className>de.jstacs.parameters.FileParameter</className><fileParameter>
<name><className>java.lang.String</className>genetic code</name><comment><className>java.lang.String</className>optional user-specified genetic code</comment><datatype><className>de.jstacs.DataType</className><name>FILE</name></datatype><mime><className>java.lang.String</className>tabular</mime><checkMimeType><className>java.lang.Boolean</className>false</checkMimeType><required><className>java.lang.Boolean</className>false</required><isSet><className>java.lang.Boolean</className>false</isSet><errorMessage>null</errorMessage><value>null</value><validator>null</validator></fileParameter>
</parameter><parameter><className>de.jstacs.parameters.SimpleParameter</className><simpleParameter>
<name><className>java.lang.String</className>proteins</name><comment><className>java.lang.String</className>whether the complete proteins sequences should returned as output</comment><datatype><className>de.jstacs.DataType</className><name>BOOLEAN</name></datatype><required><className>java.lang.Boolean</className>true</required><isSet><className>java.lang.Boolean</className>false</isSet><errorMessage><className>java.lang.String</className></errorMessage><validator>null</validator><defaultValue><className>java.lang.Boolean</className>false</defaultValue><value><className>java.lang.Boolean</className>false</value></simpleParameter>
</parameter><parameter><className>de.jstacs.parameters.SimpleParameter</className><simpleParameter>
<name><className>java.lang.String</className>cds</name><comment><className>java.lang.String</className>whether the complete CDSs should returned as output</comment><datatype><className>de.jstacs.DataType</className><name>BOOLEAN</name></datatype><required><className>java.lang.Boolean</className>true</required><isSet><className>java.lang.Boolean</className>false</isSet><errorMessage><className>java.lang.String</className></errorMessage><validator>null</validator><defaultValue><className>java.lang.Boolean</className>false</defaultValue><value><className>java.lang.Boolean</className>false</value></simpleParameter>
</parameter><parameter><className>de.jstacs.parameters.SimpleParameter</className><simpleParameter>
<name><className>java.lang.String</className>genomic</name><comment><className>java.lang.String</className>whether the genomic regions should be returned (upper case = coding, lower case = non coding)</comment><datatype><className>de.jstacs.DataType</className><name>BOOLEAN</name></datatype><required><className>java.lang.Boolean</className>true</required><isSet><className>java.lang.Boolean</className>false</isSet><errorMessage><className>java.lang.String</className></errorMessage><validator>null</validator><defaultValue><className>java.lang.Boolean</className>false</defaultValue><value><className>java.lang.Boolean</className>false</value></simpleParameter>
</parameter><parameter><className>de.jstacs.parameters.SimpleParameter</className><simpleParameter>
<name><className>java.lang.String</className>introns</name><comment><className>java.lang.String</className>whether introns should be extracted from annotation, that might be used for test cases</comment><datatype><className>de.jstacs.DataType</className><name>BOOLEAN</name></datatype><required><className>java.lang.Boolean</className>true</required><isSet><className>java.lang.Boolean</className>false</isSet><errorMessage><className>java.lang.String</className></errorMessage><validator>null</validator><defaultValue><className>java.lang.Boolean</className>false</defaultValue><value><className>java.lang.Boolean</className>false</value></simpleParameter>
</parameter><parameter><className>de.jstacs.parameters.SimpleParameter</className><simpleParameter>
<name><className>java.lang.String</className>upcase IDs</name><comment><className>java.lang.String</className>whether the IDs in the GFF should be upcased</comment><datatype><className>de.jstacs.DataType</className><name>BOOLEAN</name></datatype><required><className>java.lang.Boolean</className>true</required><isSet><className>java.lang.Boolean</className>false</isSet><errorMessage><className>java.lang.String</className></errorMessage><validator>null</validator><defaultValue><className>java.lang.Boolean</className>false</defaultValue><value><className>java.lang.Boolean</className>false</value></simpleParameter>
</parameter><parameter><className>de.jstacs.parameters.SimpleParameter</className><simpleParameter>
<name><className>java.lang.String</className>repair</name><comment><className>java.lang.String</className>if a transcript annotation can not be parsed, the program will try to infer the phase of the CDS parts to repair the annotation</comment><datatype><className>de.jstacs.DataType</className><name>BOOLEAN</name></datatype><required><className>java.lang.Boolean</className>true</required><isSet><className>java.lang.Boolean</className>false</isSet><errorMessage><className>java.lang.String</className></errorMessage><validator>null</validator><defaultValue><className>java.lang.Boolean</className>false</defaultValue><value><className>java.lang.Boolean</className>false</value></simpleParameter>
</parameter><parameter><className>de.jstacs.parameters.FileParameter</className><fileParameter>
<name><className>java.lang.String</className>selected</name><comment><className>java.lang.String</className>The path to list file, which allows to make only a predictions for the contained transcript ids. The first column should contain transcript IDs as given in the annotation. Remaining columns will be ignored.</comment><datatype><className>de.jstacs.DataType</className><name>FILE</name></datatype><mime><className>java.lang.String</className>tabular,txt</mime><checkMimeType><className>java.lang.Boolean</className>false</checkMimeType><required><className>java.lang.Boolean</className>true</required><isSet><className>java.lang.Boolean</className>false</isSet><errorMessage>null</errorMessage><value>null</value><validator><className>de.jstacs.parameters.validation.FileExistsValidator</className><FileExistsValidator>
<errorMsg>null</errorMsg></FileExistsValidator>
</validator></fileParameter>
</parameter><parameter><className>de.jstacs.parameters.EnumParameter</className><collectionParameter>
<name><className>java.lang.String</className>Ambiguity</name><comment><className>java.lang.String</className>This parameter defines how to deal with ambiguities in the DNA. There are 3 options: EXCEPTION, which will remove the corresponding transcript, AMBIGUOUS, which will use an X for the corresponding amino acid, and RANDOM, which will randomly select an amnio acid from the list of possibilities.</comment><datatype><className>de.jstacs.DataType</className><name>STRING</name></datatype><required><className>java.lang.Boolean</className>true</required><userSelected><className>java.lang.Boolean</className>false</userSelected><errorMessage>null</errorMessage><collection><className>de.jstacs.parameters.SimpleParameterSet</className><parameterSet>
<set>
<numberOfParameters><className>java.lang.Integer</className>3</numberOfParameters><parameter><className>de.jstacs.parameters.SimpleParameter</className><simpleParameter>
<name><className>java.lang.String</className>EXCEPTION</name><comment>null</comment><datatype><className>de.jstacs.DataType</className><name>STRING</name></datatype><required><className>java.lang.Boolean</className>false</required><isSet><className>java.lang.Boolean</className>true</isSet><errorMessage><className>java.lang.String</className></errorMessage><validator>null</validator><defaultValue>null</defaultValue><value><className>java.lang.String</className>EXCEPTION</value></simpleParameter>
</parameter><parameter><className>de.jstacs.parameters.SimpleParameter</className><simpleParameter>
<name><className>java.lang.String</className>AMBIGUOUS</name><comment>null</comment><datatype><className>de.jstacs.DataType</className><name>STRING</name></datatype><required><className>java.lang.Boolean</className>false</required><isSet><className>java.lang.Boolean</className>true</isSet><errorMessage><className>java.lang.String</className></errorMessage><validator>null</validator><defaultValue>null</defaultValue><value><className>java.lang.String</className>AMBIGUOUS</value></simpleParameter>
</parameter><parameter><className>de.jstacs.parameters.SimpleParameter</className><simpleParameter>
<name><className>java.lang.String</className>RANDOM</name><comment>null</comment><datatype><className>de.jstacs.DataType</className><name>STRING</name></datatype><required><className>java.lang.Boolean</className>false</required><isSet><className>java.lang.Boolean</className>true</isSet><errorMessage><className>java.lang.String</className></errorMessage><validator>null</validator><defaultValue>null</defaultValue><value><className>java.lang.String</className>RANDOM</value></simpleParameter>
</parameter></set>
</parameterSet>
</collection><selected><className>java.lang.Integer</className>0</selected><defaultSelected><className>java.lang.Integer</className>0</defaultSelected><selectedEnum><className>java.lang.String</className>EXCEPTION</selectedEnum><defaultSelectedEnum><className>java.lang.String</className>EXCEPTION</defaultSelectedEnum><enumName><className>java.lang.Class</className><name>projects.gemoma.Tools$Ambiguity</name></enumName></collectionParameter>
</parameter><parameter><className>de.jstacs.parameters.SimpleParameter</className><simpleParameter>
<name><className>java.lang.String</className>discard pre-mature stop</name><comment><className>java.lang.String</className>if *true* transcripts with pre-mature stop codon are discarded as they often indicate misannotation</comment><datatype><className>de.jstacs.DataType</className><name>BOOLEAN</name></datatype><required><className>java.lang.Boolean</className>true</required><isSet><className>java.lang.Boolean</className>false</isSet><errorMessage><className>java.lang.String</className></errorMessage><validator>null</validator><defaultValue><className>java.lang.Boolean</className>true</defaultValue><value><className>java.lang.Boolean</className>true</value></simpleParameter>
</parameter><parameter><className>de.jstacs.parameters.SimpleParameter</className><simpleParameter>
<name><className>java.lang.String</className>stop-codon excluded from CDS</name><comment><className>java.lang.String</className>A flag that states whether the reference annotation contains the stop codon in the CDS annotation or not</comment><datatype><className>de.jstacs.DataType</className><name>BOOLEAN</name></datatype><required><className>java.lang.Boolean</className>true</required><isSet><className>java.lang.Boolean</className>false</isSet><errorMessage><className>java.lang.String</className></errorMessage><validator>null</validator><defaultValue><className>java.lang.Boolean</className>false</defaultValue><value><className>java.lang.Boolean</className>false</value></simpleParameter>
</parameter><parameter><className>de.jstacs.parameters.SimpleParameter</className><simpleParameter>
<name><className>java.lang.String</className>full-length</name><comment><className>java.lang.String</className>A flag which allows for choosing between only full-length and all (i.e., full-length and partial) transcripts</comment><datatype><className>de.jstacs.DataType</className><name>BOOLEAN</name></datatype><required><className>java.lang.Boolean</className>true</required><isSet><className>java.lang.Boolean</className>false</isSet><errorMessage><className>java.lang.String</className></errorMessage><validator>null</validator><defaultValue><className>java.lang.Boolean</className>true</defaultValue><value><className>java.lang.Boolean</className>true</value></simpleParameter>
</parameter><parameter><className>de.jstacs.parameters.SimpleParameter</className><simpleParameter>
<name><className>java.lang.String</className>verbose</name><comment><className>java.lang.String</className>A flag which allows to output a wealth of additional information</comment><datatype><className>de.jstacs.DataType</className><name>BOOLEAN</name></datatype><required><className>java.lang.Boolean</className>true</required><isSet><className>java.lang.Boolean</className>false</isSet><errorMessage><className>java.lang.String</className></errorMessage><validator>null</validator><defaultValue><className>java.lang.Boolean</className>false</defaultValue><value><className>java.lang.Boolean</className>false</value></simpleParameter>
</parameter></set>
</parameterSet>
</ToolParameterSet>
</toolParameters><toolName><className>java.lang.String</className>Extractor</toolName><date><className>java.lang.Long</className>1599481972145</date></listResult>
